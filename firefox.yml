---
- name: Ensure Firefox is started
  async: 1
  poll: 0
  ansible.builtin.shell: "firefox &"

- name: Wait for 20 seconds
  ansible.builtin.pause:
    seconds: 20

- name: Ensure Firefox is terminated
  ansible.builtin.shell: "pkill firefox"

- name: Get the active Firefox profile from profiles.ini
  register: profiles_info
  changed_when: false
  ansible.builtin.command: grep -E '^Path|^Default' ~/.mozilla/firefox/profiles.ini

- name: Find the active profile path
  loop: "{{ range(1, profiles_info['stdout_lines'] | length) | list }}"
  when: "'Default=1' in profiles_info['stdout_lines'][item]"
  ansible.builtin.set_fact:
    firefox_profile_dir: "{{ profiles_info['stdout_lines'][item | int - 1] | regex_replace('Path=', '') }}"

- name: Ensure Firefox font size is 20
  ansible.builtin.lineinfile:
    path: "~/.mozilla/firefox/{{ firefox_profile_dir }}/prefs.js"
    line: 'user_pref("font.size.variable.x-western", 20);'
    create: true

- name: Create moz_places table if it doesn't exist
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    CREATE TABLE IF NOT EXISTS moz_places (
        id INTEGER PRIMARY KEY,
        url LONGVARCHAR,
        title LONGVARCHAR,
        rev_host LONGVARCHAR,
        visit_count INTEGER DEFAULT 0,
        hidden INTEGER DEFAULT 0,
        typed INTEGER DEFAULT 0,
        favicon_id INTEGER,
        frecency INTEGER DEFAULT -1,
        last_visit_date INTEGER,
        guid TEXT,
        foreign_count INTEGER DEFAULT 0,
        url_hash INTEGER DEFAULT 0 NOT NULL,
        description TEXT
    );"
  register: create_places_table
  changed_when: true

- name: Create moz_bookmarks table if it doesn't exist
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    CREATE TABLE IF NOT EXISTS moz_bookmarks (
        id INTEGER PRIMARY KEY,
        type INTEGER,
        fk INTEGER DEFAULT NULL,
        parent INTEGER,
        position INTEGER,
        title LONGVARCHAR,
        keyword_id INTEGER,
        folder_type TEXT,
        dateAdded INTEGER,
        lastModified INTEGER,
        guid TEXT,
        syncStatus INTEGER DEFAULT 0 NOT NULL,
        syncChangeCounter INTEGER DEFAULT 1 NOT NULL
    );"
  register: create_bookmarks_table
  changed_when: true

- name: Get the parent ID of the Bookmarks Toolbar
  register: toolbar_parent_id
  changed_when: false
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    SELECT id FROM moz_bookmarks WHERE title = 'toolbar' OR title = 'Bookmarks Toolbar';"

- name: Check if OpenShift courses bookmarks folder exists
  register: openshift_folder_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_bookmarks WHERE title = 'OpenShift courses'"

- name: Add OpenShift courses bookmarks folder
  when: openshift_folder_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_bookmarks (type, title, parent)
    VALUES (2, 'OpenShift courses',
    {{ toolbar_parent_id.stdout }});"

- name: Check if OpenShift course URLs exist
  register: openshift_url_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_places WHERE url = 'https://console-openshift-console.apps.ocp4.example.com'"

- name: Add OpenShift course URLs to bookmarks folder
  when: openshift_url_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_places (url) VALUES ('https://console-openshift-console.apps.ocp4.example.com');
    INSERT INTO moz_places (url) VALUES ('https://console-openshift-console.apps.ocp4-mng.example.com');
    INSERT INTO moz_bookmarks (type, fk, parent, position, title)
    VALUES (1, (SELECT id FROM moz_places WHERE url = 'https://console-openshift-console.apps.ocp4.example.com'),
    {{ toolbar_parent_id.stdout }}, 0, 'OCP Console');
    INSERT INTO moz_bookmarks (type, fk, parent, position, title)
    VALUES (1, (SELECT id FROM moz_places WHERE url = 'https://console-openshift-console.apps.ocp4-mng.example.com'),
    {{ toolbar_parent_id.stdout }}, 1, 'OCP MNG Console');"

- name: Check if Ansible courses bookmarks folder exists
  register: ansible_folder_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_bookmarks WHERE title = 'Ansible courses'"

- name: Add Ansible courses bookmarks folder
  when: ansible_folder_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_bookmarks (type, title, parent)
    VALUES (2, 'Ansible courses',
    {{ toolbar_parent_id.stdout }});"

- name: Check if Ansible course URLs exist
  register: ansible_url_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_places WHERE url = 'https://controller.lab.example.com'"

- name: Add Ansible course URLs to bookmarks folder
  when: ansible_url_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_places (url) VALUES ('https://controller.lab.example.com');
    INSERT INTO moz_places (url) VALUES ('https://hub.lab.example.com');
    INSERT INTO moz_bookmarks (type, fk, parent, position, title)
    VALUES (1, (SELECT id FROM moz_places WHERE url = 'https://controller.lab.example.com'),
    {{ toolbar_parent_id.stdout }}, 0, 'Controller');
    INSERT INTO moz_bookmarks (type, fk, parent, position, title)
    VALUES (1, (SELECT id FROM moz_places WHERE url = 'https://hub.lab.example.com'),
    {{ toolbar_parent_id.stdout }}, 1, 'Hub');"

- name: Check if Satellite courses bookmarks folder exists
  register: satellite_folder_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_bookmarks WHERE title = 'Satellite courses'"

- name: Add Satellite courses bookmarks folder
  when: satellite_folder_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_bookmarks (type, title, parent)
    VALUES (2, 'Satellite courses',
    {{ toolbar_parent_id.stdout }});"

- name: Check if Satellite course URLs exist
  register: satellite_url_check
  changed_when: false
  failed_when: false
  ansible.builtin.command: sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "SELECT * FROM moz_places WHERE url = 'https://satellite.lab.example.com'"

- name: Add Satellite course URLs to bookmarks folder
  when: satellite_url_check['stdout'] == ""
  ansible.builtin.command: |
    sqlite3 ~/.mozilla/firefox/{{ firefox_profile_dir }}/places.sqlite "
    INSERT INTO moz_places (url) VALUES ('https://satellite.lab.example.com');
    INSERT INTO moz_bookmarks (type, fk, parent, position, title)
    VALUES (1, (SELECT id FROM moz_places WHERE url = 'https://satellite.lab.example.com'),
    {{ toolbar_parent_id.stdout }}, 0, 'Satellite');"

